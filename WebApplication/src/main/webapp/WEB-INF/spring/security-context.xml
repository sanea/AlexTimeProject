<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <http pattern="/javax.faces.resource/**" security="none"/>
    <http pattern="/pages/login.xhtml" security="none"/>
    <http pattern="/pages/login.jsf" security="none"/>
    <http pattern="/pages/404.xhtml" security="none"/>
    <http pattern="/pages/error.xhtml" security="none"/>

    <http use-expressions="true" access-denied-page="/pages/login.xhtml">
        <!--<intercept-url pattern="/" access="permitAll" />-->
        <intercept-url pattern="/pages/usersEdit*" access="hasRole('EDIT_USERS')"/>
        <intercept-url pattern="/pages/groupsEdit*" access="hasRole('EDIT_GROUPS')"/>
        <intercept-url pattern="/pages/tasks*" access="hasRole('MANAGE_TASK')"/>
        <intercept-url pattern="/pages/tasksEdit*" access="hasRole('EDIT_TASKS')"/>
        <intercept-url pattern="/pages/onlineTasks*" access="hasRole('STAT_ONLINE')"/>
        <intercept-url pattern="/pages/allTasks*" access="hasRole('STAT_ALL')"/>
        <intercept-url pattern="/pages/sitesEdit*" access="hasRole('EDIT_SITES')"/>
        <intercept-url pattern="/pages/assignTasks*" access="hasRole('ASSIGN_TASKS')"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <form-login login-page="/pages/login.xhtml" default-target-url="/pages/index.xhtml"
                    always-use-default-target="true"
                    authentication-failure-url="/pages/login.xhtml"/>
        <logout logout-url="/logout" logout-success-url="/pages/login.xhtml" invalidate-session="true"/>
        <!--<remember-me key="mssKey" token-validity-seconds="60"/>-->
    </http>

    <authentication-manager alias="authenticationManager">
        <!--<authentication-provider user-service-ref="userServiceJDBC"/>-->
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>

    <!--<user-service id="userServiceJDBC">
    <user name="user1" password="1" authorities="ROLE_USER"/>
    <user name="user2" password="1" authorities="ROLE_USER"/>
    <user name="admin" password="1" authorities="ROLE_ADMIN"/>
    </user-service>-->

    <!-- <jdbc-user-service id="userServiceJDBC"
                        data-source-ref="dataSource"
                        group-authorities-by-username-query="select g.id, g.group_name, ga.authority
                                                     from groups g, group_members gm, group_authorities ga
                                                     where gm.username = ? and g.id = ga.group_id and g.id = gm.group_id"
                        users-by-username-query="SELECT username, password, enabled FROM users WHERE username = ?"
                        authorities-by-username-query="SELECT gm.username, ga.authority
                                             FROM group_members gm, group_authorities ga
                                             WHERE gm.group_id = ga.group_id AND gm.username = ?"
             />-->

    <!--Enable @Secured({"ROLE_1", "ROLE_2"}) annotation-->
    <global-method-security secured-annotations="enabled" jsr250-annotations="enabled"/>

</beans:beans>
